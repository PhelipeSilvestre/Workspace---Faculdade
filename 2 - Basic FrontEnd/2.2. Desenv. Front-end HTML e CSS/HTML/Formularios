O que são formulários? Estrutura básica de um formulário

Os formulários são estruturas utilizadas para coletar a entrada de dados do usuário e enviar para o servidor.

A construção de um formulário inicia-se sempre com a tag <form> e termina com a tag </form>. Esses elementos são um contêiner para diferentes tipos de campos de entrada de dados, tais como: campos de texto, caixas de seleção, botões de opção, botões de envio etc. O elemento <form> possui alguns atributos referente à forma como o formulário será submetido:

◦         O atributo action define recebe como valor o destino dos dados que serão submetidos no formulário, que, normalmente é uma página em uma linguagem de backend como PHP, Java, ASP etc. Ex.: <form action=“/action_page.php”>

◦         O atributo target especifica onde exibir a resposta recebida após o envio do formulário, como por exemplo _blank (em uma nova janela), _self (na janela atual), _parent (no quadro pai), _top (em todo o corpo da janela) ou  framename (em um iframe nomeado).  Ex.: <form action=“/action_page.php” target=“_blank”>

◦         O atributo method especifica o método HTTP a ser usado ao enviar os dados do formulário, que podem ser enviados como variáveis de URL (method=“get”) ou como transação HTTP post (method=“post”). Exemplo: <form action=“/action_page.php” method=“post”>



Tipos de campos para envio de dados

O elemento HTML <input> é o mais comumente usado nos formulários. Um elemento <input> pode ser exibido de várias maneiras, dependendo do valor do atributo type, por exemplo:

●     <input type=“text”> Exibe um campo de entrada de texto de uma linha.

●     <input type=“radio”> Exibe um botão para cada item de uma série de opções, onde somente um item pode ser selecionado.

●     <input type=“checkbox”> Exibe uma caixa de seleção para cada item de uma série de opções, onde pode-se selecionar mais de um item.

●     <input type=“submit”> Exibe um botão enviar (para submeter o formulário)

●     <input type=“button”> Exibe um botão clicável

●     <input type=“date”> Exibe (ao clicar no campo) um calendário para selecionar uma data.

●     <input type=“email”> Exibe um campo para entrada de um endereço de e-mail. O valor de entrada é validado automaticamente para garantir que seja um endereço de e-mail formatado corretamente.

Outro campo muito utilizado é a lista suspensa, que é definida pelo elemento <select> seguido das opções da lista, definidas pelos elementos <option>


  <select id=“carros” name=“carros”>
           <option  value=“gol”>Gol</option>
           <option  value=“palio”>Pálio</option>
           <option  value=“hb20”>HB20</option>
           <option  value=“clio”>Clio</option>
  </select> 
Todo campo do formulário deve ter um atributo name que deverá receber o nome do campo (sem espaços) para que o servidor possa pegar o valor enviado.

Para atribuir um rótulo ao campo, utiliza-se o elemento <label>. É importante a utilização deste elemento para que leitores de tela identifiquem o campo para pessoas com deficiência visual. Este elemento ajuda os usuários que têm dificuldade em clicar em regiões muito pequenas pois ao clicar no texto do <label>, ele seleciona o campo, mas, para isso, é necessário utilizar o atributo for, que deve receber o mesmo valor do atributo id do campo a que se refere, como no exemplo a seguir:

<label for=“linguagem”>Digite  aqui a sua linguagem favorita</label>
 
<input type=“text”  id=“linguagem” name=“linguagemFavorita”>
Abaixo um exemplo de formulário com campos de entrada de texto para nome e sobrenome. Veja que comumente, os valores dos atributos for, id e name são iguais.

<form>
           <label  for=“nome”>Nome</label><br>
           <input  type=“text” id=“nome” name=“nome”><br>
           <label  for=“sobrenome”>Sobrenome:</label><br>
           <input  type=“text” id=“sobrenome” name=“sobrenome”>
  </form> 
Podemos também usar o elemento <fieldset> para agrupar campos do formulário, como no exemplo a seguir:

<form  action=“/action_page.php”>
           <fieldset>
                    <legend>Pessoa:</legend>
                    <label  for=“nome”>Nome:</label><br>
                    <input  type=“text” id=“nome” name=“nome”  value=“John”><br>
                    <label  for=“sobrenome”>Sobrenome:</label><br>
                    <input  type=“text” id=“sobrenome” name=“sobrenome”  value=“Doe”><br>
                    <input type=“submit”  value=“Submit”>
           </fieldset>
  </form> 
Podemos utilizar o atributo readonly para especificar que um campo de entrada é somente leitura. Um campo de entrada somente leitura não pode ser modificado.

Podemos usar também atributo maxlength para limitar número máximo de caracteres que podem ser inseridos em um campo.

A seguir mais um exemplo:

<form>
           <label  for=“nome”>Nome:</label>
           <input type=“text”  id=“nome” name=“nome” value=“John” readonly>
           <label  for=“sobrenome”>Sobrenome:</label>
           <input type=“text”  id=“sobrenome” name=“sobrenome” value=“Doe”  maxlength>
  </form> 


Conteúdo Bônus

Criando um Formulário na sua Página Web

Aprenda a adicionar um formulário em sua página web com este passo a passo:

1. Comece abrindo uma nova seção em sua página web com a tag <section>.

2. Dentro desta seção, abra o formulário com a tag <form action=“” method=“get”>.

3. Vamos adicionar um campo para o usuário inserir o seu nome. Para isso, utilize a tag de rótulo <label for=“nome”>Nome:</label><br>. Em seguida, adicione o campo para o nome com a tag <input type=“text” id=“nome” name=“nome” value=“John” readonly><br><br>.

4. Agora, vamos adicionar um campo para o sobrenome do usuário. Para isso, use o rótulo <label for=“sobrenome”>Sobrenome:</label><br>. Em seguida, inclua o campo com a tag <input type=“text” id=“sobrenome” name=“sobrenome” value=“Doe” maxlength><br><br>.

5. Vamos criar um campo em forma de lista suspensa para o usuário escolher sua linguagem preferida. Adicione um rótulo para a lista com <label for=“linguagem”>Escolha sua linguagem preferida:</label><br>. Abra a lista com a tag <select id=“linguagem” name=“linguagem”>.

6. Dentro desta lista, adicione os itens com as tags:


<option  value=“html”>HTML</option>
 
<option  value=“css”>CSS</option>
 
<option  value=“javascript”>Javascript</option>
 

Em seguida, feche a lista suspensa com </select> <br><br>.

7. Agora, inclua um botão para que o usuário possa enviar os dados do formulário com a tag <input type=“submit” value=“Enviar”>

8. Feche o formulário com a tag </form> e, em seguida, feche a seção com </section>.

9. Finalmente, volte ao navegador e atualize a página para visualizar as alterações.

Este guia rápido lhe ajudará a entender melhor como criar e configurar um formulário em sua página web. Pratique e aperfeiçoe suas habilidades!





Dica quente para você não esquecer

O elemento <label>:

●      Define rótulos para os campos do formulário.

●      É útil para usuários que necessitam de leitores de tela, porque o leitor lerá em voz alta o rótulo quando o usuário focar no campo dele.

●      Ajuda os usuários que têm dificuldade em clicar em regiões muito pequenas (como botões de opção ou caixas de seleção) - pois quando o usuário clica no <label>, ele seleciona o campo deste rótulo

●      O atributo for do <label> deve ser igual ao atributo id do campo a que ele se refere.



O atributo method do formulário

Observações sobre o método GET:

●      Anexa os dados do formulário à URL, em pares nome/valor

●      NUNCA use GET para enviar dados confidenciais! (os dados do formulário enviado são visíveis na URL!)

●      O comprimento de um URL é limitado (2048 caracteres)

●      Este método é útil para envios de formulários em que um usuário deseja marcar o resultado

●      GET é bom para dados não seguros, como strings de consulta no Google

Observações sobre o POST:

●     Anexa os dados do formulário dentro do corpo da solicitação HTTP (os dados do formulário enviado não são mostrados na URL)

●     O POST não tem limitações de tamanho e pode ser usado para enviar grandes quantidades de dados.

